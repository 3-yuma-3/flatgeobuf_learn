namespace FlatGeobuf;

enum GeometryType: ubyte {
  Point,
  MultiPoint,
  LineString,
  MultiLineString,
  Polygon,
  MultiPolygon
}

enum ColumnType: ubyte {
  Byte,
  UByte,
  Bool,
  Short,
  UShort,
  Int,
  UInt,
  Long,
  ULong,
  Float,
  Double,
  String,
  Json,
  DateTime
}

table Column {
  name: string (key, required); // Column name
  type: ColumnType;             // Column type
}

table Crs {
  org: string;                  // Case-insensitive name of the defining organization e.g. EPSG or epsg (NULL = EPSG)
  code: int;                    // Numeric ID of the Spatial Reference System assigned by the organization (0 = unknown)
  name: string;                 // Human readable name of this SRS
  description: string;          // Human readable description of this SRS
  wkt: string;                  // Well-known Text Representation of the Spatial Reference System
}

table Header {
  name: string;                 // Dataset name
  envelope: [double];           // Bounds
  geometry_type: GeometryType = Point;
  hasZ: bool = false;           // Does geometry have Z dimension?
  hasM: bool = false;           // Does geometry have M dimension?
  hasT: bool = false;           // Does geometry have T dimension?
  hasTM: bool = false;          // Does geometry have TM dimension?
  columns: [Column];            // Attribute columns schema
  features_count: ulong;        // Number of features in the dataset (0 = unknown)
  index_node_size: ushort = 16; // Index node size (0 = no index)
  crs: Crs;                     // Spatial Reference System
}

root_type Header;
