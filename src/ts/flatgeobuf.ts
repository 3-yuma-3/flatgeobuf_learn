// automatically generated by the FlatBuffers compiler, do not modify

import { flatbuffers } from "flatbuffers"
/**
 * @enum
 */
export namespace FlatGeobuf{
export enum ColumnType{
  BYTE= 0,
  UBYTE= 1,
  BOOL= 2,
  SHORT= 3,
  USHOT= 4,
  INT= 5,
  UINT= 6,
  FLOAT= 7,
  LONG= 8,
  ULONG= 9,
  DOUBLE= 10,
  STRING= 11
}};

/**
 * @enum
 */
export namespace FlatGeobuf{
export enum GeometryType{
  POINT= 0,
  MULTIPOINT= 1,
  LINESTRING= 2,
  MULTILINESTRING= 3,
  POLYGON= 4,
  MULTIPOLYGON= 5,
  GEOMETRYCOLLECTION= 6
}};

/**
 * @constructor
 */
export namespace FlatGeobuf{
export class Column {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Column
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Column {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Column= obj
 * @returns Column
 */
static getRootAsColumn(bb:flatbuffers.ByteBuffer, obj?:Column):Column {
  return (obj || new Column).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns FlatGeobuf.ColumnType
 */
type():FlatGeobuf.ColumnType {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : FlatGeobuf.ColumnType.BYTE;
};

/**
 * @param flatbuffers.Builder builder
 */
static startColumn(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset nameOffset
 */
static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param FlatGeobuf.ColumnType type
 */
static addType(builder:flatbuffers.Builder, type:FlatGeobuf.ColumnType) {
  builder.addFieldInt8(1, type, FlatGeobuf.ColumnType.BYTE);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endColumn(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace FlatGeobuf{
export class Geometry {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Geometry
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Geometry {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Geometry= obj
 * @returns Geometry
 */
static getRootAsGeometry(bb:flatbuffers.ByteBuffer, obj?:Geometry):Geometry {
  return (obj || new Geometry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns FlatGeobuf.GeometryType
 */
type():FlatGeobuf.GeometryType {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : FlatGeobuf.GeometryType.POINT;
};

/**
 * @param number index
 * @param FlatGeobuf.Geometry= obj
 * @returns FlatGeobuf.Geometry
 */
geometries(index: number, obj?:FlatGeobuf.Geometry):FlatGeobuf.Geometry|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new FlatGeobuf.Geometry).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
geometriesLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @returns number
 */
coordLengths(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns number
 */
coordLengthsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint32Array
 */
coordLengthsArray():Uint32Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? new Uint32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param number index
 * @returns number
 */
coords(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;
};

/**
 * @returns number
 */
coordsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Float64Array
 */
coordsArray():Float64Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startGeometry(builder:flatbuffers.Builder) {
  builder.startObject(4);
};

/**
 * @param flatbuffers.Builder builder
 * @param FlatGeobuf.GeometryType type
 */
static addType(builder:flatbuffers.Builder, type:FlatGeobuf.GeometryType) {
  builder.addFieldInt8(0, type, FlatGeobuf.GeometryType.POINT);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset geometriesOffset
 */
static addGeometries(builder:flatbuffers.Builder, geometriesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, geometriesOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createGeometriesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startGeometriesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset coordLengthsOffset
 */
static addCoordLengths(builder:flatbuffers.Builder, coordLengthsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, coordLengthsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createCoordLengthsVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startCoordLengthsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset coordsOffset
 */
static addCoords(builder:flatbuffers.Builder, coordsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, coordsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createCoordsVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat64(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startCoordsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endGeometry(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace FlatGeobuf{
export class Header {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Header
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Header {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Header= obj
 * @returns Header
 */
static getRootAsHeader(bb:flatbuffers.ByteBuffer, obj?:Header):Header {
  return (obj || new Header).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
dimensions():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @returns number
 */
envelope(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;
};

/**
 * @returns number
 */
envelopeLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Float64Array
 */
envelopeArray():Float64Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns FlatGeobuf.GeometryType
 */
geometryType():FlatGeobuf.GeometryType {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : FlatGeobuf.GeometryType.POINT;
};

/**
 * @param number index
 * @param FlatGeobuf.Column= obj
 * @returns FlatGeobuf.Column
 */
columns(index: number, obj?:FlatGeobuf.Column):FlatGeobuf.Column|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new FlatGeobuf.Column).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
columnsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns flatbuffers.Long
 */
indexOffset():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @returns number
 */
indexNodeSize():number {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
indexNodeCount():number {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns flatbuffers.Long
 */
featuresOffset():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @returns flatbuffers.Long
 */
featuresSize():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @returns flatbuffers.Long
 */
featuresCount():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @param flatbuffers.Builder builder
 */
static startHeader(builder:flatbuffers.Builder) {
  builder.startObject(10);
};

/**
 * @param flatbuffers.Builder builder
 * @param number dimensions
 */
static addDimensions(builder:flatbuffers.Builder, dimensions:number) {
  builder.addFieldInt8(0, dimensions, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset envelopeOffset
 */
static addEnvelope(builder:flatbuffers.Builder, envelopeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, envelopeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createEnvelopeVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat64(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startEnvelopeVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
};

/**
 * @param flatbuffers.Builder builder
 * @param FlatGeobuf.GeometryType geometryType
 */
static addGeometryType(builder:flatbuffers.Builder, geometryType:FlatGeobuf.GeometryType) {
  builder.addFieldInt8(2, geometryType, FlatGeobuf.GeometryType.POINT);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset columnsOffset
 */
static addColumns(builder:flatbuffers.Builder, columnsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, columnsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createColumnsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startColumnsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long indexOffset
 */
static addIndexOffset(builder:flatbuffers.Builder, indexOffset:flatbuffers.Long) {
  builder.addFieldInt64(4, indexOffset, builder.createLong(0, 0));
};

/**
 * @param flatbuffers.Builder builder
 * @param number indexNodeSize
 */
static addIndexNodeSize(builder:flatbuffers.Builder, indexNodeSize:number) {
  builder.addFieldInt32(5, indexNodeSize, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number indexNodeCount
 */
static addIndexNodeCount(builder:flatbuffers.Builder, indexNodeCount:number) {
  builder.addFieldInt32(6, indexNodeCount, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long featuresOffset
 */
static addFeaturesOffset(builder:flatbuffers.Builder, featuresOffset:flatbuffers.Long) {
  builder.addFieldInt64(7, featuresOffset, builder.createLong(0, 0));
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long featuresSize
 */
static addFeaturesSize(builder:flatbuffers.Builder, featuresSize:flatbuffers.Long) {
  builder.addFieldInt64(8, featuresSize, builder.createLong(0, 0));
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long featuresCount
 */
static addFeaturesCount(builder:flatbuffers.Builder, featuresCount:flatbuffers.Long) {
  builder.addFieldInt64(9, featuresCount, builder.createLong(0, 0));
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endHeader(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishHeaderBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
};

}
}
